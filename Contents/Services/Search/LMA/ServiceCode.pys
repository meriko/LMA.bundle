SEARCH_URL = "http://archive.org/search.php?query=%s"
SEARCH_PARAMS = '(collection:"etree" AND (%s AND collection:etree)) AND mediatype:etree'

def Search(query):
  
  oc = ObjectContainer(title2='Search Results')
  
  params = String.Quote(SEARCH_PARAMS % query, usePlus=False)
  showsList = HTML.ElementFromURL(SEARCH_URL % params)
  
  showURLs = showsList.xpath("//a[@class='titleLink']/@href")
  showTitles = showsList.xpath("//a[@class='titleLink']")
  # pain in my fucking ass roundabout way to get proper show titles for artists split by date
  titles = []
  summaries = []
  ratings = []
  for i in range(len(showTitles)):
      y = showsList.xpath("//table[@class='resultsTable']//tr[%i]/td[2]/a[1]//text()" % (i+1))
      # the +1 is because python list indexes start from 0 and indexes in xpath start at 1
      title = ''.join(y)
      titles.append(title)
      
      x = showsList.xpath("//table[@class='resultsTable']//tr[%i]//td[@class='hitCell']/text()" % (i+1))[1]
      # the +1 is because python list indexes start from 0 and indexes in xpath start at 1
      summary = ''.join(x)
      summaries.append(summary)
      
      w = showsList.xpath("//table[@class='resultsTable']//tr[%i]//img[contains(@src, '/images/stars')]" % (i+1))
      # the +1 is because python list indexes start from 0 and indexes in xpath start at 1
      try:
        rating = float(w[0].get('title').split(' ')[0])*2
      except:
        rating = None
      ratings.append(rating)
      
  for url, title, summary, rating in zip(showURLs, titles, summaries, ratings):
      concertURL = "http://www.archive.org" + url
      oc.add(Album(url=concertURL,  title=str(title), summary=summary, rating=rating, thumb=R('icon-default.jpg')))
    
  return  oc
